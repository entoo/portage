The bundled acinclude.m4 includeso ld libtool macros that
are breaking build, and AC_PROG_SHELL is the only thing
from it that can't be autogenerated. Since all it does
is check for a POSIX shell, just avoid using it.
--- configure.in
+++ configure.in
@@ -44,7 +44,6 @@
 dnl Program support
 dnl
 AC_PATH_PROG( PERL, perl, false )
-AC_PROG_SHELL
 AC_PROG_MAKE_SET
 AC_PROG_INSTALL
 case "$host_os" in
@@ -405,7 +404,7 @@
 dnl
 AC_OUTPUT_COMMANDS([
   infile=utils/siege2csv.in 
-  outfile=utils/siege2csv.pl
+  outfile=utils/siege2csv
   rm -f $outfile
   sed -e "s|%_PREFIX%|$bindir|" \
       -e "s|%_PERL%|$LREP|" \

--- src/Makefile.am
+++ src/Makefile.am
@@ -28,7 +28,7 @@
 
 AM_CFLAGS          =   $(PTHREAD_CFLAGS) $(WARN_CFLAGS) $(SSL_CFLAGS)
 
-LDFLAGS            =   $(SSL_LDFLAGS) $(PTHREAD_LDFLAGS)  
+LDFLAGS            +=   $(SSL_LDFLAGS) $(PTHREAD_LDFLAGS)  
 
 LIBS               =   $(SSL_LIBS) 

Use of \b causes the T in "Transactions" to be displayed
on the last column of the previous line.
--- src/main.c
+++ src/main.c
@@ -529,7 +529,7 @@
     fprintf(stderr, "%s aborted due to excessive socket failure; you\n", program_name);
     fprintf(stderr, "can change the failure threshold in $HOME/.%src\n", program_name);
   }
-  fprintf(stderr, "\bTransactions:\t\t%12u hits\n",        data_get_count(D));
+  fprintf(stderr, "Transactions:\t\t%12u hits\n",        data_get_count(D));
   fprintf(stderr, "Availability:\t\t%12.2f %%\n",          data_get_count(D)==0 ? 0 :
                                                            (double)data_get_count(D) /
                                                            (data_get_count(D)+my.failed)

--- utils/Makefile.am
+++ utils/Makefile.am
@@ -25,7 +25,7 @@
 WARN_CFLAGS = @WARN_CFLAGS@
 AM_CFLAGS = $(WARN_CFLAGS)
 
-SIEGE_UTILITIES   =    bombardment siege2csv.pl siege.config
+SIEGE_UTILITIES   =    bombardment siege2csv siege.config
 
 DISTCLEANFILES    =    $(SIEGE_UTILITIES)

--- doc/Makefile.am
+++ doc/Makefile.am
@@ -46,35 +46,6 @@
 
 URLSTXT           =      $(sysconfdir)/urls.txt
 
-install-exec-hook: 
-	@if test -f $(SIEGERC); then \
-	  if cmp -s $(srcdir)/siegerc $(SIEGERC); then echo ""; \
-	    else \
-	    echo ' $(INSTALL_DATA) $(srcdir)/siegerc $(SIEGERC).new'; \
-	    $(INSTALL_DATA) $(srcdir)/siegerc $(SIEGERC).new; \
-	    echo "#####################################################"; \
-	    echo "WARNING: File $(SIEGERC) already exists."; \
-	    echo "         A new resource file has been installed as"; \
-	    echo "         $(SIEGERC).new. You may want to"; \
-	    echo "         consider using the newer version in order to"; \
-	    echo "         take advantage of any new features."; \
-	    echo "#####################################################"; \
-	  fi; \
-	else \
-	  $(INSTALL_DATA) $(srcdir)/siegerc $(SIEGERC); \
-	fi 
-	@if test -f $(URLSTXT); then \
-	  if cmp -s $(srcdir)/siegerc $(URLSTXT); then echo ""; \
-	    else \
-	    echo "WARNING: File $(URLSTXT) already exists."; \
-	    echo "         It was NOT replaced with this installation."; \
-	  fi; \
-	else \
-	  $(mkinstalldirs) $(sysconfdir); \
-	  $(INSTALL_DATA) $(srcdir)/urls.txt $(URLSTXT); \
-	fi 
-
-
 uninstall:
 	rm -f $(SIEGERC)

bug 111057 - siege.config utility uses ${} which gets
interpreted by bash sending the contents to stderr
instead of ${HOME}/.siegerc
--- doc/siegerc.in
+++ doc/siegerc.in
@@ -9,11 +9,11 @@
 # Variable declarations. You can set variables here 
 # for use in the directives below. Example:
 # PROXY = proxy.joedog.org
-# Reference variables inside ${} or $(), example: 
+# Reference variables inside \${} or $(), example: 
 # proxy-host = ${PROXY} 
 # You can also reference ENVIRONMENT variables without
 # actually declaring them, example:
-# logfile = $(HOME)/var/siege.log
+# logfile = \$(HOME)/var/siege.log
 
 #
 # Signify verbose mode, true turns on verbose output
